{"ast":null,"code":"var _jsxFileName = \"C:\\\\my_codes\\\\samurai_path\\\\projects\\\\01_first_project\\\\react_kabzda_1\\\\src\\\\Components\\\\Content\\\\my_posts\\\\My_posts.js\";\nimport React from \"react\";\nimport s from './My_posts.module.css';\nimport My_post from \"./My_post/My_post\";\nimport { add_post_action_creator, update_new_text_action_creator } from \"../../../redux/state/profile_reducer\";\n\nfunction My_posts(props) {\n  debugger;\n  let new_post_element = React.createRef();\n\n  let on_add_post = () => {\n    props.add_post();\n  };\n\n  let on_post_change = () => {\n    let text = new_post_element.current.value;\n    props.update_new_text(text);\n  };\n\n  let posts_elements = props.posts.map(p => /*#__PURE__*/React.createElement(My_post, {\n    message: p.message,\n    like_count: p.like_count,\n    dislike_count: p.dislike_count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 30\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: s.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"My posts\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: new_post_element,\n    onChange: on_post_change,\n    value: props.post_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"input here\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: on_add_post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Add a post\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"delete a post\"), posts_elements);\n}\n\nexport default My_posts;","map":{"version":3,"sources":["C:/my_codes/samurai_path/projects/01_first_project/react_kabzda_1/src/Components/Content/my_posts/My_posts.js"],"names":["React","s","My_post","add_post_action_creator","update_new_text_action_creator","My_posts","props","new_post_element","createRef","on_add_post","add_post","on_post_change","text","current","value","update_new_text","posts_elements","posts","map","p","message","like_count","dislike_count","post_text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,uBAAR,EAAiCC,8BAAjC,QAAsE,sCAAtE;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACzB;AACI,MAAIC,gBAAgB,GAAGP,KAAK,CAACQ,SAAN,EAAvB;;AACA,MAAIC,WAAW,GAAG,MAAM;AACpBH,IAAAA,KAAK,CAACI,QAAN;AACH,GAFD;;AAGA,MAAIC,cAAc,GAAG,MAAM;AACvB,QAAIC,IAAI,GAAGL,gBAAgB,CAACM,OAAjB,CAAyBC,KAApC;AACAR,IAAAA,KAAK,CAACS,eAAN,CAAsBH,IAAtB;AACH,GAHD;;AAIA,MAAII,cAAc,GACdV,KAAK,CAACW,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC,OAApB;AAA6B,IAAA,UAAU,EAAED,CAAC,CAACE,UAA3C;AAAuD,IAAA,aAAa,EAAEF,CAAC,CAACG,aAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CADJ;AAEA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ;AAAG,IAAA,SAAS,EAAErB,CAAC,CAACW,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,eAEJ;AAAU,IAAA,GAAG,EAAEL,gBAAf;AAAiC,IAAA,QAAQ,EAAEI,cAA3C;AAA2D,IAAA,KAAK,EAAEL,KAAK,CAACiB,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFI,eAGJ;AAAQ,IAAA,OAAO,EAAEd,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHI,eAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALI,EAMHO,cANG,CAAR;AAQH;;AAED,eAAeX,QAAf","sourcesContent":["import React from \"react\";\r\nimport s from './My_posts.module.css';\r\nimport My_post from \"./My_post/My_post\";\r\nimport {add_post_action_creator, update_new_text_action_creator} from \"../../../redux/state/profile_reducer\";\r\n\r\n\r\nfunction My_posts(props) {\r\ndebugger;\r\n    let new_post_element = React.createRef()\r\n    let on_add_post = () => {\r\n        props.add_post();\r\n    }\r\n    let on_post_change = () => {\r\n        let text = new_post_element.current.value;\r\n        props.update_new_text(text);\r\n    }\r\n    let posts_elements =\r\n        props.posts.map(p => <My_post message={p.message} like_count={p.like_count} dislike_count={p.dislike_count}/>);\r\n    return (<div>\r\n        <p className={s.text}>My posts</p>\r\n        <textarea ref={new_post_element} onChange={on_post_change} value={props.post_text}>input here</textarea>\r\n        <button onClick={on_add_post}>Add a post\r\n        </button>\r\n        <button>delete a post</button>\r\n        {posts_elements}\r\n    </div>)\r\n}\r\n\r\nexport default My_posts;"]},"metadata":{},"sourceType":"module"}