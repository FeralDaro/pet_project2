{"ast":null,"code":"var _jsxFileName = \"C:\\\\my_codes\\\\samurai_path\\\\projects\\\\01_first_project\\\\react_kabzda_1\\\\src\\\\Components\\\\Content\\\\Dialogs\\\\Dialogs.js\";\nimport React from \"react\";\nimport s from './Dialogs.module.css';\nimport Dialogs_item from \"./Dialogs_item/Dialogs_item\";\nimport Message from \"./Message/Message\";\nimport { send_message_creator, update_new_message_body_creator } from \"../../../redux/state/state\";\n\nfunction Dialogs(props) {\n  let state = props.store.get_state().Dialogs_page;\n  let dialogs_elements = state.dialogs_data.map(dialog => /*#__PURE__*/React.createElement(Dialogs_item, {\n    id: dialog.id,\n    name: dialog.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }\n  }));\n  let messages_elements = props.messages.map(m => /*#__PURE__*/React.createElement(Message, {\n    message: m.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }));\n  let new_message_body = props.state.new_message_body;\n  let new_message = React.createRef();\n\n  let add_message = () => {\n    let text = new_message.current.value;\n    alert(text);\n  };\n\n  let on_new_message_change = e => {\n    let body = e.target.value;\n    props.store.dispatch(update_new_message_body_creator(body));\n  };\n\n  let on_send_message_click = () => {\n    props.store.dispatch(send_message_creator());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Dialogs\"), dialogs_elements), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, messages_elements, /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"enter message\",\n    value: new_message_body,\n    onChange: on_new_message_change,\n    ref: new_message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      add_message();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Add a message\")));\n}\n\nexport default Dialogs;","map":{"version":3,"sources":["C:/my_codes/samurai_path/projects/01_first_project/react_kabzda_1/src/Components/Content/Dialogs/Dialogs.js"],"names":["React","s","Dialogs_item","Message","send_message_creator","update_new_message_body_creator","Dialogs","props","state","store","get_state","Dialogs_page","dialogs_elements","dialogs_data","map","dialog","id","name","messages_elements","messages","m","message","new_message_body","new_message","createRef","add_message","text","current","value","alert","on_new_message_change","e","body","target","dispatch","on_send_message_click","content","dialogs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,oBAAR,EAA8BC,+BAA9B,QAAoE,4BAApE;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,SAAZ,GAAwBC,YAApC;AACA,MAAIC,gBAAgB,GAAGJ,KAAK,CAACK,YAAN,CAAmBC,GAAnB,CACtBC,MAAM,iBAAI,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEA,MAAM,CAACC,EAAzB;AAA6B,IAAA,IAAI,EAAED,MAAM,CAACE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,CAAvB;AAEA,MAAIC,iBAAiB,GAAGX,KAAK,CAACY,QAAN,CAAeL,GAAf,CACvBM,CAAC,iBAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,CAAxB;AAEA,MAAIC,gBAAgB,GAAGf,KAAK,CAACC,KAAN,CAAYc,gBAAnC;AACA,MAAIC,WAAW,GAAGvB,KAAK,CAACwB,SAAN,EAAlB;;AACA,MAAIC,WAAW,GAAG,MAAM;AACpB,QAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,KAA/B;AACAC,IAAAA,KAAK,CAACH,IAAD,CAAL;AACH,GAHD;;AAIA,MAAII,qBAAqB,GAAIC,CAAD,IAAO;AAC/B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASL,KAApB;AACArB,IAAAA,KAAK,CAACE,KAAN,CAAYyB,QAAZ,CAAqB7B,+BAA+B,CAAC2B,IAAD,CAApD;AACH,GAHD;;AAIA,MAAIG,qBAAqB,GAAG,MAAM;AAC9B5B,IAAAA,KAAK,CAACE,KAAN,CAAYyB,QAAZ,CAAqB9B,oBAAoB,EAAzC;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAEH,CAAC,CAACmC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEnC,CAAC,CAACoC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKzB,gBAFL,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,iBADL,eAEI;AAAU,IAAA,WAAW,EAAC,eAAtB;AAAsC,IAAA,KAAK,EAAEI,gBAA7C;AACU,IAAA,QAAQ,EAAEQ,qBADpB;AAC2C,IAAA,GAAG,EAAEP,WADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,eAII;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBE,MAAAA,WAAW;AACd,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,CALJ,CADJ;AAiBH;;AAED,eAAenB,OAAf","sourcesContent":["import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport Dialogs_item from \"./Dialogs_item/Dialogs_item\";\r\nimport Message from \"./Message/Message\";\r\nimport {send_message_creator, update_new_message_body_creator} from \"../../../redux/state/state\";\r\n\r\nfunction Dialogs(props) {\r\n    let state = props.store.get_state().Dialogs_page;\r\n    let dialogs_elements = state.dialogs_data.map\r\n    (dialog => <Dialogs_item id={dialog.id} name={dialog.name}/>);\r\n    let messages_elements = props.messages.map\r\n    (m => <Message message={m.message}/>);\r\n    let new_message_body = props.state.new_message_body;\r\n    let new_message = React.createRef();\r\n    let add_message = () => {\r\n        let text = new_message.current.value;\r\n        alert(text);\r\n    }\r\n    let on_new_message_change = (e) => {\r\n        let body = e.target.value;\r\n        props.store.dispatch(update_new_message_body_creator(body));\r\n    }\r\n    let on_send_message_click = () => {\r\n        props.store.dispatch(send_message_creator());\r\n    }\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.dialogs}>\r\n                <h1>Dialogs</h1>\r\n                {dialogs_elements}\r\n            </div>\r\n            <div>\r\n                {messages_elements}\r\n                <textarea placeholder=\"enter message\" value={new_message_body}\r\n                          onChange={on_new_message_change} ref={new_message}> </textarea>\r\n                <button onClick={() => {\r\n                    add_message()\r\n                }}>Add a message\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}