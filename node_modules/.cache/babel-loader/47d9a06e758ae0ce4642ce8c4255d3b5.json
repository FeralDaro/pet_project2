{"ast":null,"code":"const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_TEXT = \"UPDATE-NEW-TEXT\";\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\nlet store = {\n  _state: {\n    Profile_page: {\n      posts: [{\n        id: 1,\n        message: \"Hello Kaneki \",\n        like_count: 3,\n        dislike_count: 1\n      }, {\n        id: 2,\n        message: \"Bye, Feral'\",\n        like_count: 3,\n        dislike_count: 1\n      }],\n      post_text: \"Kaneki Ken\"\n    },\n    Dialogs_page: {\n      dialogs_data: [{\n        id: 1,\n        name: \"Yaroslav\"\n      }, {\n        id: 2,\n        name: \"Alex\"\n      }, {\n        id: 3,\n        name: \"Veronika\"\n      }, {\n        id: 4,\n        name: \"Naruto\"\n      }, {\n        id: 5,\n        name: \"Tanjiro\"\n      }, {\n        id: 6,\n        name: \"Kaneki\"\n      }],\n      messages_data: [{\n        id: 1,\n        message: \"heyy\"\n      }, {\n        id: 2,\n        message: \"no\"\n      }, {\n        id: 3,\n        message: \"ok\"\n      }, {\n        id: 4,\n        message: \"the let's go\"\n      }, {\n        id: 5,\n        message: \"yeah that's great\"\n      }, {\n        id: 6,\n        message: \"welcome amazing\"\n      }],\n      new_message_body: \"\"\n    }\n  },\n\n  get_state() {\n    return this._state;\n  },\n\n  _call_subscriber() {\n    console.log(\"state is changed\");\n  },\n\n  subscribe(observer) {\n    this._call_subscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let new_post = {\n        id: 5,\n        message: this._state.Profile_page.post_text,\n        like_count: 0,\n        dislike_count: 0\n      };\n\n      this._state.Profile_page.posts.push(new_post);\n\n      this._state.Profile_page.post_text = \"\";\n\n      this._call_subscriber(this._state);\n    } else if (action.type === UPDATE_NEW_TEXT) {\n      this._state.Profile_page.post_text = action.new_text;\n\n      this._call_subscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.Dialogs_page.new_message_body = action.body;\n\n      this._call_subscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.Dialogs_page.new_message_body;\n      this._state.Dialogs_page.new_message_body = '';\n\n      this._state.Dialogs_page.messages_data.push({\n        id: 6,\n        message: body\n      });\n\n      this._call_subscriber(this._state);\n    }\n  }\n\n};\nexport const add_post_action_creator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const update_new_text_action_creator = text => {\n  return {\n    type: UPDATE_NEW_TEXT,\n    new_text: text\n  };\n};\nexport const send_message_creator = () => {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nexport const update_new_message_body_creator = body => {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["C:/my_codes/samurai_path/projects/01_first_project/react_kabzda_1/src/redux/state/state.js"],"names":["ADD_POST","UPDATE_NEW_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","Profile_page","posts","id","message","like_count","dislike_count","post_text","Dialogs_page","dialogs_data","name","messages_data","new_message_body","get_state","_call_subscriber","console","log","subscribe","observer","dispatch","action","type","new_post","push","new_text","body","add_post_action_creator","update_new_text_action_creator","text","send_message_creator","update_new_message_body_creator","window"],"mappings":"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","sourcesContent":["const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_TEXT = \"UPDATE-NEW-TEXT\";\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet store = {\r\n    _state: {\r\n        Profile_page: {\r\n            posts: [\r\n                {id: 1, message: \"Hello Kaneki \", like_count: 3, dislike_count: 1},\r\n                {id: 2, message: \"Bye, Feral'\", like_count: 3, dislike_count: 1},\r\n\r\n            ],\r\n            post_text: \"Kaneki Ken\"\r\n        },\r\n\r\n        Dialogs_page: {\r\n            dialogs_data: [\r\n                {id: 1, name: \"Yaroslav\"},\r\n                {id: 2, name: \"Alex\"},\r\n                {id: 3, name: \"Veronika\"},\r\n                {id: 4, name: \"Naruto\"},\r\n                {id: 5, name: \"Tanjiro\"},\r\n                {id: 6, name: \"Kaneki\"},\r\n            ],\r\n            messages_data: [\r\n                {id: 1, message: \"heyy\"},\r\n                {id: 2, message: \"no\"},\r\n                {id: 3, message: \"ok\"},\r\n                {id: 4, message: \"the let's go\"},\r\n                {id: 5, message: \"yeah that's great\"},\r\n                {id: 6, message: \"welcome amazing\"},\r\n            ],\r\n            new_message_body: \"\"\r\n        }\r\n\r\n    },\r\n    get_state() {\r\n\r\n        return this._state;\r\n    },\r\n    _call_subscriber() {\r\n        console.log(\"state is changed\")\r\n    },\r\n\r\n    subscribe(observer) {\r\n        this._call_subscriber = observer;\r\n    },\r\n    dispatch(action) {\r\n        if (action.type === ADD_POST){\r\n            let new_post = {\r\n                id: 5,\r\n                message: this._state.Profile_page.post_text,\r\n                like_count: 0,\r\n                dislike_count: 0\r\n            }\r\n            this._state.Profile_page.posts.push(new_post);\r\n            this._state.Profile_page.post_text = \"\";\r\n            this._call_subscriber(this._state);\r\n        }else if(action.type === UPDATE_NEW_TEXT) {\r\n\r\n            this._state.Profile_page.post_text = action.new_text;\r\n\r\n            this._call_subscriber(this._state);\r\n        }else if(action.type === UPDATE_NEW_MESSAGE_BODY){\r\n            this._state.Dialogs_page.new_message_body = action.body;\r\n            this._call_subscriber(this._state);\r\n        }else if(action.type === SEND_MESSAGE){\r\n            let body = this._state.Dialogs_page.new_message_body;\r\n            this._state.Dialogs_page.new_message_body = '';\r\n            this._state.Dialogs_page.messages_data.push({id: 6, message: body});\r\n            this._call_subscriber(this._state);\r\n        }\r\n            }\r\n}\r\nexport const add_post_action_creator = () => {\r\n\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\nexport const update_new_text_action_creator = (text) => {\r\n\r\n    return {\r\n        type: UPDATE_NEW_TEXT,\r\n        new_text: text\r\n    }\r\n}\r\nexport const send_message_creator = () => {\r\n\r\n    return {\r\n        type: SEND_MESSAGE\r\n    }\r\n}\r\nexport const update_new_message_body_creator = (body) => {\r\n\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        body: body\r\n    }\r\n}\r\nexport default store;\r\nwindow.store = store;"]},"metadata":{},"sourceType":"module"}