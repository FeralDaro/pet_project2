{"ast":null,"code":"import _toConsumableArray from \"C:\\\\my_codes\\\\samurai_path\\\\projects\\\\01_first_project\\\\pet_project2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\my_codes\\\\samurai_path\\\\projects\\\\01_first_project\\\\pet_project2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { usersAPI } from \"../api/api\";\nvar FOLLOW = 'FOLLOW';\nvar UNFOLLOW = 'UNFOLLOW';\nvar SET_USERS = 'SET_USERS';\nvar SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nvar SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nvar TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nvar TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nvar initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nvar usersReducer = function usersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        users: state.users.map(function (u) {\n          if (u.id === action.userId) {\n            return _objectSpread(_objectSpread({}, u), {}, {\n              followed: true\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case UNFOLLOW:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        users: state.users.map(function (u) {\n          if (u.id === action.userId) {\n            return _objectSpread(_objectSpread({}, u), {}, {\n              followed: false\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case SET_USERS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          users: action.users\n        });\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          totalUsersCount: action.count\n        });\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isFetching: action.isFetching\n        });\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          followingInProgress: action.isFetching ? [].concat(_toConsumableArray(state.followingInProgress), [action.userId]) : state.followingInProgress.filter(function (id) {\n            return id != action.userId;\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport var followSuccess = function followSuccess(userId) {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport var unfollowSuccess = function unfollowSuccess(userId) {\n  return {\n    type: UNFOLLOW,\n    userId\n  };\n};\nexport var setUsers = function setUsers(users) {\n  return {\n    type: SET_USERS,\n    users\n  };\n};\nexport var setCurrentPage = function setCurrentPage(currentPage) {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage\n  };\n};\nexport var setTotalUsersCount = function setTotalUsersCount(totalUsersCount) {\n  return {\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUsersCount\n  };\n};\nexport var toggleIsFetching = function toggleIsFetching(isFetching) {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  };\n};\nexport var toggleFollowingProgress = function toggleFollowingProgress(isFetching, userId) {\n  return {\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n  };\n};\nexport var getUsers = function getUsers(currentPage, pageSize) {\n  return function (dispatch) {\n    dispatch(toggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(function (data) {\n      debugger;\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n    });\n  };\n};\nexport var follow = function follow(userId) {\n  return function (dispatch) {\n    dispatch(toggleFollowingProgress(true, userId));\n    usersAPI.follow(userId).then(function (response) {\n      if (response.data.resultCode == 0) {\n        dispatch(followSuccess(userId));\n      }\n\n      dispatch(toggleFollowingProgress(false, userId));\n    });\n  };\n};\nexport var unfollow = function unfollow(userId) {\n  return function (dispatch) {\n    dispatch(toggleFollowingProgress(true, userId));\n    usersAPI.unfollow(userId).then(function (response) {\n      if (response.data.resultCode == 0) {\n        dispatch(unfollowSuccess(userId));\n      }\n\n      dispatch(toggleFollowingProgress(false, userId));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/my_codes/samurai_path/projects/01_first_project/pet_project2/src/redux/users-reducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","count","filter","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","then","data","items","totalCount","follow","response","resultCode","unfollow"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,YAAvB;AAEA,IAAMC,MAAM,GAAG,QAAf;AACA,IAAMC,QAAQ,GAAG,UAAjB;AACA,IAAMC,SAAS,GAAG,WAAlB;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AACA,IAAMC,qBAAqB,GAAG,uBAA9B;AACA,IAAMC,kBAAkB,GAAG,oBAA3B;AACA,IAAMC,4BAA4B,GAAG,8BAArC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,QAAQ,EAAE,CAFK;AAGfC,EAAAA,eAAe,EAAE,CAHF;AAIfC,EAAAA,WAAW,EAAE,CAJE;AAKfC,EAAAA,UAAU,EAAE,IALG;AAMfC,EAAAA,mBAAmB,EAAE;AANN,CAAnB;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,MAAL;AACI,6CACOe,KADP;AAEIP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgB,UAAAC,CAAC,EAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mDAAWF,CAAX;AAAcG,cAAAA,QAAQ,EAAE;AAAxB;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFX;;AASJ,SAAKlB,QAAL;AACI,6CACOc,KADP;AAEIP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgB,UAAAC,CAAC,EAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mDAAWF,CAAX;AAAcG,cAAAA,QAAQ,EAAE;AAAxB;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFX;;AASJ,SAAKjB,SAAL;AAAgB;AACZ,+CAAWa,KAAX;AAAkBP,UAAAA,KAAK,EAAEQ,MAAM,CAACR;AAAhC;AACH;;AACD,SAAKL,gBAAL;AAAuB;AACnB,+CAAWY,KAAX;AAAkBJ,UAAAA,WAAW,EAAEK,MAAM,CAACL;AAAtC;AACH;;AACD,SAAKP,qBAAL;AAA4B;AACxB,+CAAWW,KAAX;AAAkBL,UAAAA,eAAe,EAAEM,MAAM,CAACO;AAA1C;AACH;;AACD,SAAKlB,kBAAL;AAAyB;AACrB,+CAAWU,KAAX;AAAkBH,UAAAA,UAAU,EAAEI,MAAM,CAACJ;AAArC;AACH;;AACD,SAAKN,4BAAL;AAAmC;AAC/B,+CACOS,KADP;AAEIF,UAAAA,mBAAmB,EAAEG,MAAM,CAACJ,UAAP,gCACXG,KAAK,CAACF,mBADK,IACgBG,MAAM,CAACK,MADvB,KAEfN,KAAK,CAACF,mBAAN,CAA0BW,MAA1B,CAAiC,UAAAJ,EAAE;AAAA,mBAAIA,EAAE,IAAIJ,MAAM,CAACK,MAAjB;AAAA,WAAnC;AAJV;AAMH;;AACD;AACI,aAAON,KAAP;AA1CR;AA4CH,CA7CD;;AAgDA,OAAO,IAAMU,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,MAAD;AAAA,SAAa;AAACJ,IAAAA,IAAI,EAAEjB,MAAP;AAAeqB,IAAAA;AAAf,GAAb;AAAA,CAAtB;AACP,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACL,MAAD;AAAA,SAAa;AAACJ,IAAAA,IAAI,EAAEhB,QAAP;AAAiBoB,IAAAA;AAAjB,GAAb;AAAA,CAAxB;AACP,OAAO,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACnB,KAAD;AAAA,SAAY;AAACS,IAAAA,IAAI,EAAEf,SAAP;AAAkBM,IAAAA;AAAlB,GAAZ;AAAA,CAAjB;AACP,OAAO,IAAMoB,cAAc,GAAG,SAAjBA,cAAiB,CAACjB,WAAD;AAAA,SAAkB;AAACM,IAAAA,IAAI,EAAEd,gBAAP;AAAyBQ,IAAAA;AAAzB,GAAlB;AAAA,CAAvB;AACP,OAAO,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACnB,eAAD;AAAA,SAAsB;AAACO,IAAAA,IAAI,EAAEb,qBAAP;AAA8BmB,IAAAA,KAAK,EAAEb;AAArC,GAAtB;AAAA,CAA3B;AACP,OAAO,IAAMoB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAClB,UAAD;AAAA,SAAiB;AAACK,IAAAA,IAAI,EAAEZ,kBAAP;AAA2BO,IAAAA;AAA3B,GAAjB;AAAA,CAAzB;AACP,OAAO,IAAMmB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACnB,UAAD,EAAaS,MAAb;AAAA,SAAyB;AAACJ,IAAAA,IAAI,EAAEX,4BAAP;AAAqCM,IAAAA,UAArC;AAAiDS,IAAAA;AAAjD,GAAzB;AAAA,CAAhC;AAEP,OAAO,IAAMW,QAAQ,GAAG,SAAXA,QAAW,CAACrB,WAAD,EAAcF,QAAd,EAA2B;AAC/C,SAAO,UAACwB,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACH,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AAEA/B,IAAAA,QAAQ,CAACiC,QAAT,CAAkBrB,WAAlB,EAA+BF,QAA/B,EAAyCyB,IAAzC,CAA8C,UAAAC,IAAI,EAAI;AAClD;AACAF,MAAAA,QAAQ,CAACH,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACAG,MAAAA,QAAQ,CAACN,QAAQ,CAACQ,IAAI,CAACC,KAAN,CAAT,CAAR;AACAH,MAAAA,QAAQ,CAACJ,kBAAkB,CAACM,IAAI,CAACE,UAAN,CAAnB,CAAR;AACH,KALD;AAMH,GATD;AAUH,CAXM;AAYP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACjB,MAAD,EAAY;AAC9B,SAAO,UAACY,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACF,uBAAuB,CAAC,IAAD,EAAOV,MAAP,CAAxB,CAAR;AACAtB,IAAAA,QAAQ,CAACuC,MAAT,CAAgBjB,MAAhB,EACKa,IADL,CACU,UAAAK,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACJ,IAAT,CAAcK,UAAd,IAA4B,CAAhC,EAAmC;AAC/BP,QAAAA,QAAQ,CAACR,aAAa,CAACJ,MAAD,CAAd,CAAR;AACH;;AACDY,MAAAA,QAAQ,CAACF,uBAAuB,CAAC,KAAD,EAAQV,MAAR,CAAxB,CAAR;AACH,KANL;AAOH,GATD;AAUH,CAXM;AAYP,OAAO,IAAMoB,QAAQ,GAAG,SAAXA,QAAW,CAACpB,MAAD,EAAY;AAChC,SAAO,UAACY,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACF,uBAAuB,CAAC,IAAD,EAAOV,MAAP,CAAxB,CAAR;AACAtB,IAAAA,QAAQ,CAAC0C,QAAT,CAAkBpB,MAAlB,EACKa,IADL,CACU,UAAAK,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACJ,IAAT,CAAcK,UAAd,IAA4B,CAAhC,EAAmC;AAC/BP,QAAAA,QAAQ,CAACP,eAAe,CAACL,MAAD,CAAhB,CAAR;AACH;;AACDY,MAAAA,QAAQ,CAACF,uBAAuB,CAAC,KAAD,EAAQV,MAAR,CAAxB,CAAR;AACH,KANL;AAOH,GATD;AAUH,CAXM;AAaP,eAAeP,YAAf","sourcesContent":["import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            debugger;\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}