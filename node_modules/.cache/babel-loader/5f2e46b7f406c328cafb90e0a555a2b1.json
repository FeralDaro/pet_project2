{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 12\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 11\n  }, {\n    id: 3,\n    message: 'Blabla',\n    likesCount: 11\n  }, {\n    id: 4,\n    message: 'Dada',\n    likesCount: 11\n  }],\n  newPostText: 'it-kamasutra.com',\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: state.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostText: ''\n        };\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return { ...state,\n          newPostText: action.newText\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUserProfile = userId => dispatch => {\n  usersAPI.getProfile(userId).then(response => {\n    dispatch(setUserProfile(response.data));\n  });\n};\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    dispatch(setStatus(response.data));\n  });\n};\nexport const updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport default profileReducer;","map":{"version":3,"sources":["C:/my_codes/samurai_path/projects/01_first_project/pet_project2/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likesCount","newPostText","profile","status","profileReducer","state","action","type","newPost","newText","addPostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","then","response","data","getStatus","updateStatus","resultCode","updateNewPostTextActionCreator","text"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS= 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => (dispatch) =>{\r\n    usersAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n}\r\nexport const getStatus = (userId) => (dispatch) =>{\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n}\r\nexport const updateStatus = (status) => (dispatch) =>{\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n           if (response.data.resultCode === 0){\r\n               dispatch(setStatus(status))\r\n           }\r\n        });\r\n}\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}