{"ast":null,"code":"import _objectSpread from \"C:\\\\my_codes\\\\samurai_path\\\\projects\\\\01_first_project\\\\pet_project2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { authAPI } from \"../api/api\";\nvar SET_USER_DATA = 'SET_USER_DATA';\nvar initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return _objectSpread(_objectSpread(_objectSpread({}, state), action.data), {}, {\n        isAuth: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var setAuthUserData = function setAuthUserData(userId, email, login) {\n  return {\n    type: SET_USER_DATA,\n    data: {\n      userId,\n      email,\n      login\n    }\n  };\n};\nexport var getAuthUserData = function getAuthUserData() {\n  return function (dispatch) {\n    authAPI.me().then(function (response) {\n      if (response.data.resultCode === 0) {\n        var _response$data$data = response.data.data,\n            id = _response$data$data.id,\n            login = _response$data$data.login,\n            email = _response$data$data.email;\n        dispatch(setAuthUserData(id, email, login));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/my_codes/samurai_path/projects/01_first_project/pet_project2/src/redux/auth-reducer.js"],"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","getAuthUserData","dispatch","me","then","response","resultCode","id"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,IAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AAEI,2DACOO,KADP,GAEOC,MAAM,CAACE,IAFd;AAGIL,QAAAA,MAAM,EAAE;AAHZ;;AAMJ;AACI,aAAOE,KAAP;AAVR;AAYH,CAbD;;AAgBA,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB;AAAA,SAA2B;AAACK,IAAAA,IAAI,EAAET,aAAP;AAAsBU,IAAAA,IAAI,EAAE;AAACR,MAAAA,MAAD;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB;AAA5B,GAA3B;AAAA,CAAxB;AACP,OAAO,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAM,UAACC,QAAD,EAAc;AAC/Cd,IAAAA,OAAO,CAACe,EAAR,GACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,UAAIA,QAAQ,CAACN,IAAT,CAAcO,UAAd,KAA6B,CAAjC,EAAoC;AAAA,kCACPD,QAAQ,CAACN,IAAT,CAAcA,IADP;AAAA,YAC3BQ,EAD2B,uBAC3BA,EAD2B;AAAA,YACvBd,KADuB,uBACvBA,KADuB;AAAA,YAChBD,KADgB,uBAChBA,KADgB;AAEhCU,QAAAA,QAAQ,CAACF,eAAe,CAACO,EAAD,EAAKf,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AACH;AACJ,KANL;AAOH,GAR8B;AAAA,CAAxB;AAUP,eAAeE,WAAf","sourcesContent":["import {authAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}  })\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login));\r\n            }\r\n        });\r\n}\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}